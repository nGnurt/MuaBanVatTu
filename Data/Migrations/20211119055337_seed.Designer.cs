// <auto-generated />
using System;
using Data.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20211119055337_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Configuration.ProductOrderDetail", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "Id");

                    b.HasIndex("Id");

                    b.ToTable("ProductDetail");
                });

            modelBuilder.Entity("Data.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FoundedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Leader")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            FoundedDate = new DateTime(2020, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Leader = "John",
                            Name = "Accounting"
                        },
                        new
                        {
                            DepartmentId = 2,
                            FoundedDate = new DateTime(2020, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Leader = "Tim",
                            Name = "Sales"
                        },
                        new
                        {
                            DepartmentId = 3,
                            FoundedDate = new DateTime(2020, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Leader = "Kate",
                            Name = "Administration"
                        });
                });

            modelBuilder.Entity("Data.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("SubcriberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            DepartmentId = 2,
                            SubcriberName = "Blake"
                        },
                        new
                        {
                            OrderId = 2,
                            DepartmentId = 1,
                            SubcriberName = "John"
                        },
                        new
                        {
                            OrderId = 3,
                            DepartmentId = 3,
                            SubcriberName = "Kate"
                        },
                        new
                        {
                            OrderId = 4,
                            DepartmentId = 1,
                            SubcriberName = "Anna"
                        });
                });

            modelBuilder.Entity("Data.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("OrderPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderQuantities")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetail");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderDate = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 2,
                            OrderPrice = 95m,
                            OrderQuantities = 10,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 2,
                            OrderDate = new DateTime(2021, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1,
                            OrderPrice = 380m,
                            OrderQuantities = 2,
                            ProductId = 5
                        },
                        new
                        {
                            Id = 3,
                            OrderDate = new DateTime(2021, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 3,
                            OrderPrice = 160m,
                            OrderQuantities = 5,
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("Data.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desciption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantities")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Desciption = "",
                            Price = 200m,
                            ProductName = "Keyboard",
                            Quantities = 50
                        },
                        new
                        {
                            ProductId = 2,
                            Desciption = "",
                            Price = 100m,
                            ProductName = "Case",
                            Quantities = 70
                        },
                        new
                        {
                            ProductId = 3,
                            Desciption = "",
                            Price = 180m,
                            ProductName = "Mouse",
                            Quantities = 40
                        },
                        new
                        {
                            ProductId = 4,
                            Desciption = "",
                            Price = 300m,
                            ProductName = "Monitor",
                            Quantities = 20
                        },
                        new
                        {
                            ProductId = 5,
                            Desciption = "",
                            Price = 400m,
                            ProductName = "Table",
                            Quantities = 10
                        });
                });

            modelBuilder.Entity("Data.Configuration.ProductOrderDetail", b =>
                {
                    b.HasOne("Data.Entities.OrderDetail", "OrderDetail")
                        .WithMany("PdInOrderDetail")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Product", "Product")
                        .WithMany("PdInOrderDetail")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderDetail");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Data.Entities.Order", b =>
                {
                    b.HasOne("Data.Entities.Department", "Department")
                        .WithMany("Order")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("Data.Entities.OrderDetail", b =>
                {
                    b.HasOne("Data.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Data.Entities.Department", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("Data.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Data.Entities.OrderDetail", b =>
                {
                    b.Navigation("PdInOrderDetail");
                });

            modelBuilder.Entity("Data.Entities.Product", b =>
                {
                    b.Navigation("PdInOrderDetail");
                });
#pragma warning restore 612, 618
        }
    }
}
